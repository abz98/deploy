import React from "react";
import {
  Card,
  CardImg,
  Breadcrumb,
  CardTitle,
  BreadcrumbItem,
  Modal, ModalHeader, ModalBody,
  CardText,
  Row,
  Col,Label,Button,
  CardBody,
} from "reactstrap";
import { Control, LocalForm, Errors } from 'react-redux-form';
import { Link } from "react-router-dom";

 export class CommentForm extends React.Component{
  constructor(props) {
    super(props);
    this.state = {
      isModalOpen: false
    };
    this.handleSubmit = this.handleSubmit.bind(this);
    this.toggleModal = this.toggleModal.bind(this);
    };
    toggleModal() {
      this.setState({
        isModalOpen: !this.state.isModalOpen
      });
    }
  handleSubmit(values) {
    console.log('Current State is: ' + JSON.stringify(values));
    alert('Current State is: ' + JSON.stringify(values));
    // event.preventDefault(); 
  }

  render(){
    const required = (val) => val && val.length;
    const maxLength = (len) => (val) => !(val) || (val.length <= len);
    const minLength = (len) => (val) => val && (val.length >= len);

  return(
    <div>
    <Button outline onClick={this.toggleModal}><span className="fa fa-edit fa-lg"></span> Comment</Button>

    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>
    <ModalHeader toggle={this.toggleModal}><b>Submit Comment</b></ModalHeader>
    <ModalBody>
          <LocalForm onSubmit={this.handleSubmit}>
            <Row className="form-group">
                Rating:
                <Control.select model=".rating" name="rating"
                  className="form-control">
                  <option>1</option>
                  <option>2</option>
                  <option>3</option>
                  <option>4</option>
                  <option>5</option>
                </Control.select>
       
            </Row>
            <Row className="form-group">Name:

              
                <Control.text model=".name" id="name" name="name"
                  placeholder="Name"
                  className="form-control"
                  validators={{
                    required, minLength: minLength(3), maxLength: maxLength(15)
                  }}
                />
                <Errors
                  className="text-danger"
                  model=".name"
                  show="touched"
                  messages={{
                    required: 'Required',
                    minLength: 'Must be greater than 2 characters',
                    maxLength: 'Must be 15 characters or less'
                  }}
                />
            
            </Row>
            <Row className="form-group">Comment:

             
                <Control.textarea model=".message" id="message" name="message"
                  rows="8"
                  className="form-control" />
           
            </Row>
            <Row className="form-group">
             
                <Button type="submit" color="primary">
                  Submit
                </Button>
            
            </Row>
          </LocalForm>
        
    </ModalBody>
</Modal>
</div>
    
  );

}
}


function RenderDish({ dish }) {
  return (
    <Card>
      <CardImg top src={dish.image} alt={dish.name} />
      <CardBody>
        <CardTitle>{dish.name}</CardTitle>
        <CardText>{dish.description}</CardText>
      </CardBody>
    </Card>
  );
}
function RenderComments({ comments }) {
  if (comments != null) {
    const formatter = new Intl.DateTimeFormat("en-GB", {
      year: "numeric",
      month: "long",
      day: "2-digit",
    });
    const fetch = comments.map((list) => {
      return (
        <div key={list.id}>
          <p>{list.comment}</p>
          <span>
            {" "}
            {formatter.format(Date.parse(list.date))}
            <br />
          </span>
          <p>---{list.author}</p>
          <hr />
        </div>
      );
    });
    return (
      <div className="container">
        <h4>Comments</h4>
        <ul class="list-unstyled">{fetch}</ul>
      </div>
    );
  } else {
    return <div></div>;
  }
}

const DishDetail = (props) => (
  <div className="container">
    <div className="row">
      <Breadcrumb>
        <BreadcrumbItem>
          <Link to="/menu">Menu</Link>
        </BreadcrumbItem>
        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>
      </Breadcrumb>
      <div className="col-12">
        <h3>{props.dish.name}</h3>
        <hr />
      </div>
    </div>
    <div className="row">
      <div className="col-12 col-md-5 m-1">
        <RenderDish dish={props.dish} />
      </div>

      <div className="col-12 col-md-5 m-1">
        <RenderComments dish={props.dish} comments={props.comments} />
        <CommentForm/>

      </div>
    </div>
    
  </div>
);

export default DishDetail;
