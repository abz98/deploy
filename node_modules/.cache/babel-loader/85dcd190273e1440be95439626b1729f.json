{"ast":null,"code":"var _jsxFileName = \"/home/knox/react/test/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport Main from './MainComponent.js';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\n;\n\nfunction renderDish({\n  dish\n}) {\n  if (dish != null) return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, dish.description)));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction renderComment({\n  commen\n}) {\n  if (dish != null && dish.comments != null) {\n    const formatter = new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    });\n    const fetch = commen.comments.map(list => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: list.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, list.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \"---\", list.author, \",\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, \" \", formatter.format(Date.parse(list.date)))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, fetch));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    });\n  }\n}\n\n;\n\nconst DishDetail = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"renderDish\", {\n    dish: props.dish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"renderComment\", {\n    commen: props.dish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  }))));\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/knox/react/test/src/components/DishdetailComponent.js"],"names":["React","Component","Main","Card","CardImg","CardText","CardBody","CardTitle","renderDish","dish","image","name","description","renderComment","commen","comments","formatter","Intl","DateTimeFormat","year","month","day","fetch","map","list","id","comment","author","format","Date","parse","date","DishDetail","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Main from './MainComponent.js'\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle\n} from 'reactstrap';;\n\n\n\n  \n\n  function renderDish({dish}) {\n    if (dish != null)\n      return (\n        <Card>\n          <CardImg top src={dish.image} alt={dish.name} />\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n      );\n    else\n      return (\n        <div></div>\n      );\n  }\n function renderComment({commen}) {\n    if (dish != null && dish.comments != null) {\n      const formatter = new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"2-digit\"\n      });\n      const fetch = commen.comments.map(list => {\n        return (\n\n          <div key={list.id}>\n\n            <p>{list.comment}</p>\n            <p>---{list.author},<span> {formatter.format(Date.parse(list.date))}</span></p>\n          </div>)\n      }\n      )\n      return (\n\n        <div>\n\n          <h4>Comments</h4>\n\n          <ul class=\"list-unstyled\">\n\n            {fetch}\n\n          </ul>\n\n        </div>\n\n      )\n    }\n    else {\n      return (\n        <div></div>\n      )\n    }\n  };\n\n\n\nconst DishDetail = (props) =>{\n    return (\n      <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-5 m-1\">\n          <renderDish dish={props.dish} />\n        </div>\n        <div className=\"col-12 col-md-5 m-1\">\n           <renderComment commen={props.dish}/>\n        </div>\n      </div>\n      </div>\n    );\n\n    }\n\n\n\n\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}