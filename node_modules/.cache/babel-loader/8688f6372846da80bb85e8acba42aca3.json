{"ast":null,"code":"var _jsxFileName = \"/home/knox/react/test/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\n;\n\nfunction renderDish({\n  dish\n}) {\n  if (dish != null) return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, dish.description)));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  });\n}\n\nfunction renderComment({\n  comnt\n}) {\n  if (comnt != null && comnt.comments != null) {\n    const fetch = comnt.comments.map(list => {\n      const formatter = new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"2-digit\"\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: list.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, list.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"---\", list.author, \",\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 31\n        }\n      }, \" \", formatter.format(Date.parse(list.date)))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, fetch));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    });\n  }\n}\n\n;\n\nconst dishDetail = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1 p-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"renderDish\", {\n    dish: props.dish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"renderComment\", {\n    dish: props.comnt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }))));\n};\n\nexport default dishDetail;","map":{"version":3,"sources":["/home/knox/react/test/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","renderDish","dish","image","name","description","renderComment","comnt","comments","fetch","map","list","formatter","Intl","DateTimeFormat","year","month","day","id","comment","author","format","Date","parse","date","dishDetail","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle\n} from 'reactstrap';;\n\n\n\nfunction renderDish({dish}) {\n  if (dish != null)\n    return (\n      <Card>\n        <CardImg top src={dish.image} alt={dish.name} />\n        <CardBody>\n          <CardTitle>{dish.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    );\n  else\n    return (\n      <div></div>\n    );\n}\nfunction renderComment({comnt}) {\n  if (comnt != null && comnt.comments != null) {\n    const fetch = comnt.comments.map(list => {\n      const formatter = new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"2-digit\"\n      });\n      return (\n\n        <div key={list.id}>\n\n          <p>{list.comment}</p>\n          <p>---{list.author},<span> {formatter.format(Date.parse(list.date))}</span></p>\n        </div>)\n    }\n    )\n    return (\n\n      <div>\n\n        <h4>Comments</h4>\n\n        <ul class=\"list-unstyled\">\n\n          {fetch}\n\n        </ul>\n\n      </div>\n\n    )\n  }\n  else {\n    return (\n      <div></div>\n    )\n  }\n};\n\n\nconst dishDetail = (props)=>{\nreturn(\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-12 col-md-5 m-1 p-auto\">\n        <renderDish dish={props.dish}/>\n      </div>\n      <div className=\"col-12 col-md-5 m-1\">\n       <renderComment dish={props.comnt} />\n      </div>\n    </div>\n  </div>)}\n\n\n\n\n\n\n\nexport default dishDetail;"]},"metadata":{},"sourceType":"module"}